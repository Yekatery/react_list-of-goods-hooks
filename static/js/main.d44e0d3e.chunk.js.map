{"version":3,"sources":["App.tsx","components/GoodsList.tsx","components/Button.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","Button","this","props","name","rest","type","React","PureComponent","goodsFromServer","App","useState","isReversed","changeIsReversed","NONE","sortType","changeSortType","sortByType","typeOfSort","isChanchedOrder","reorderedProducts","visibleGoods","sort","firstProduct","secondProduct","ALPHABET","localeCompare","LENGTH","length","reverse","getGoodsByDiffOrder","className","classNames","onClick","curState","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,oFCfQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBACE,UAAQ,OADV,SAIGA,GAFIA,S,yDCHAC,EAAb,4JACE,WACE,MAGIC,KAAKC,MAFPC,EADF,EACEA,KACGC,EAFL,iBAKA,OACE,gDACEC,KAAK,UACDD,GAFN,aAIGD,SAZT,GAA4BG,IAAMC,eFArBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGb,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMc,EAAgB,WAC3B,MAAuCC,oBAAS,GAAhD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAmCF,mBAASf,EAASkB,MAArD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,SAACC,GAClBF,EAAeE,IAYXC,EAAkBJ,IAAanB,EAASkB,MAAQF,EAChDQ,EA5CD,SACLtB,EADK,GAGJ,IADCiB,EACF,EADEA,SAAUH,EACZ,EADYA,WAENS,EAAY,YAAOvB,GAmBzB,OAjBAuB,EAAaC,MAAK,SAACC,EAAcC,GAC/B,OAAQT,GACN,KAAKnB,EAAS6B,SACZ,OAAOF,EAAaG,cAAcF,GAEpC,KAAK5B,EAAS+B,OACZ,OAAOJ,EAAaK,OAASJ,EAAcI,OAE7C,QACE,OAAO,MAIThB,GACFS,EAAaQ,UAGRR,EAqBmBS,CACxBrB,EACA,CAAEG,aAAYG,aAGhB,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACE3B,KAAK,sBACL2B,UAAWC,IACT,iBACA,CAAE,WAAYjB,IAAanB,EAAS6B,WAEtCQ,QAAS,WACPhB,EAAWrB,EAAS6B,aAIxB,cAAC,EAAD,CACErB,KAAK,iBACL2B,UAAWC,IACT,oBACA,CAAE,WAAYjB,IAAanB,EAAS+B,SAEtCM,QAAS,WACPhB,EAAWrB,EAAS+B,WAIxB,cAAC,EAAD,CACEvB,KAAK,UACL2B,UAAWC,IACT,oBACA,CAAE,YAAapB,IAEjBqB,QA9Ca,WACnBpB,GAAiB,SAAAqB,GAAQ,OAAKA,QAgDzBf,GACC,cAAC,EAAD,CACEf,KAAK,QACL2B,UAAU,4BACVE,QAjDW,WACnBpB,GAAiB,GACjBG,EAAepB,EAASkB,YAoDtB,cAAC,EAAD,CAAUhB,MAAOsB,QGzHvBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d44e0d3e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { GoodList } from './components/GoodsList';\nimport { Button } from './components/Button';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getGoodsByDiffOrder(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstProduct, secondProduct) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstProduct.localeCompare(secondProduct);\n\n      case SortType.LENGTH:\n        return firstProduct.length - secondProduct.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, changeIsReversed] = useState(false);\n  const [sortType, changeSortType] = useState(SortType.NONE);\n\n  const sortByType = (typeOfSort: SortType) => {\n    changeSortType(typeOfSort);\n  };\n\n  const reverseOrder = () => {\n    changeIsReversed(curState => !curState);\n  };\n\n  const resetSorting = () => {\n    changeIsReversed(false);\n    changeSortType(SortType.NONE);\n  };\n\n  const isChanchedOrder = sortType !== SortType.NONE || isReversed;\n  const reorderedProducts = getGoodsByDiffOrder(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <Button\n          name=\"Sort alphabetically\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => {\n            sortByType(SortType.ALPHABET);\n          }}\n        />\n\n        <Button\n          name=\"Sort by length\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => {\n            sortByType(SortType.LENGTH);\n          }}\n        />\n\n        <Button\n          name=\"Reverse\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverseOrder}\n        />\n\n        {isChanchedOrder && (\n          <Button\n            name=\"Reset\"\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          />\n        )}\n      </div>\n\n      <GoodList goods={reorderedProducts} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((good) => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\n\ninterface Props {\n  name: string,\n  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void,\n  className: string,\n}\n\nexport class Button extends React.PureComponent<Props, {}> {\n  render(): React.ReactNode {\n    const {\n      name,\n      ...rest\n    } = this.props;\n\n    return (\n      <button\n        type=\"button\"\n        {...rest}\n      >\n        {name}\n      </button>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}